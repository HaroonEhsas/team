plugins {
    id "com.android.application"
    id "kotlin-android"
    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
    id "dev.flutter.flutter-gradle-plugin"
}

android {
    namespace = "com.example.teamwork"
    compileSdk = flutter.compileSdkVersion
    ndkVersion = flutter.ndkVersion

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_17
        targetCompatibility = JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_17
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId = "com.example.teamwork"
        // You can update the following values to match your application needs.
        // For more information, see: https://flutter.dev/to/review-gradle-config.
        minSdk = flutter.minSdkVersion
        targetSdk = flutter.targetSdkVersion
        versionCode = flutter.versionCode
        versionName = flutter.versionName
    }

    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig = signingConfigs.debug
        }
    }

    // Add the Google services plugin at the end of the android block
    buildFeatures {
        viewBinding true
    }

    // Firebase and Google Services dependencies
    dependencies {
        implementation 'com.google.firebase:firebase-messaging:24.1.0'  // Firebase Messaging
        implementation 'com.google.firebase:firebase-analytics:22.2.0'  // Firebase Analytics (Optional)

        // Firebase BoM for automatic version management
        implementation platform('com.google.firebase:firebase-bom:33.8.0')

        // Add the dependencies for any other desired Firebase products
        implementation 'com.google.firebase:firebase-auth'  // For Firebase Auth (if using)
        // Add other Firebase dependencies as needed
    }
}

flutter {
    source = "../.."
}

// Apply the Google services plugin at the end of the file
apply plugin: 'com.google.gms.google-services'  // Ensure this is added to apply the Google services configuration
